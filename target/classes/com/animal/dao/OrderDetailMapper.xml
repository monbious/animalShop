<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.animal.dao.OrderDetailMapper">
	<insert id="addOrdersDetail" parameterType="com.animal.model.OrderDetail">
		insert into
		order_detail (oid,sid,num,sname,price,img,totalFee) values
		(#{oid},#{sid},#{num},#{sname},#{price},#{img},#{totalfee})
	</insert>

	<select id="selectOrderDetail" resultMap="BaseResultMap">
		select * from
		order_detail
	</select>
	<select id="searchByOid" parameterType="java.lang.String"
		resultType="com.animal.model.OrderDetail">
		select * from order_detail where oid=#{oid}
	</select>
	<resultMap id="BaseResultMap" type="com.animal.model.OrderDetail">
		<id column="oid" jdbcType="VARCHAR" property="oid" />
		<result column="sid" jdbcType="INTEGER" property="sid" />
		<result column="num" jdbcType="INTEGER" property="num" />
		<result column="sname" jdbcType="VARCHAR" property="sname" />
		<result column="price" jdbcType="DOUBLE" property="price" />
		<result column="img" jdbcType="VARCHAR" property="img" />
		<result column="totalFee" jdbcType="DOUBLE" property="totalfee" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		oid, sid, num, sname, price, img, totalFee
	</sql>
	<select id="selectByExample" parameterType="com.animal.model.OrderDetailExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from order_detail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from order_detail
		where oid = #{oid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from order_detail
		where oid = #{oid,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.animal.model.OrderDetailExample">
		delete from order_detail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.animal.model.OrderDetail">
		insert into order_detail (oid, sid, num,
		sname, price, img, totalFee
		)
		values (#{oid,jdbcType=VARCHAR}, #{sid,jdbcType=INTEGER},
		#{num,jdbcType=INTEGER},
		#{sname,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{img,jdbcType=VARCHAR},
		#{totalfee,jdbcType=DOUBLE}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.animal.model.OrderDetail">
		insert into order_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="oid != null">
				oid,
			</if>
			<if test="sid != null">
				sid,
			</if>
			<if test="num != null">
				num,
			</if>
			<if test="sname != null">
				sname,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="img != null">
				img,
			</if>
			<if test="totalfee != null">
				totalFee,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="oid != null">
				#{oid,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				#{sid,jdbcType=INTEGER},
			</if>
			<if test="num != null">
				#{num,jdbcType=INTEGER},
			</if>
			<if test="sname != null">
				#{sname,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=DOUBLE},
			</if>
			<if test="img != null">
				#{img,jdbcType=VARCHAR},
			</if>
			<if test="totalfee != null">
				#{totalfee,jdbcType=DOUBLE},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.animal.model.OrderDetailExample"
		resultType="java.lang.Long">
		select count(*) from order_detail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update order_detail
		<set>
			<if test="record.oid != null">
				oid = #{record.oid,jdbcType=VARCHAR},
			</if>
			<if test="record.sid != null">
				sid = #{record.sid,jdbcType=INTEGER},
			</if>
			<if test="record.num != null">
				num = #{record.num,jdbcType=INTEGER},
			</if>
			<if test="record.sname != null">
				sname = #{record.sname,jdbcType=VARCHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DOUBLE},
			</if>
			<if test="record.img != null">
				img = #{record.img,jdbcType=VARCHAR},
			</if>
			<if test="record.totalfee != null">
				totalFee = #{record.totalfee,jdbcType=DOUBLE},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update order_detail
		set oid = #{record.oid,jdbcType=VARCHAR},
		sid = #{record.sid,jdbcType=INTEGER},
		num = #{record.num,jdbcType=INTEGER},
		sname = #{record.sname,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=DOUBLE},
		img = #{record.img,jdbcType=VARCHAR},
		totalFee = #{record.totalfee,jdbcType=DOUBLE}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.animal.model.OrderDetail">
		update order_detail
		<set>
			<if test="sid != null">
				sid = #{sid,jdbcType=INTEGER},
			</if>
			<if test="num != null">
				num = #{num,jdbcType=INTEGER},
			</if>
			<if test="sname != null">
				sname = #{sname,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="img != null">
				img = #{img,jdbcType=VARCHAR},
			</if>
			<if test="totalfee != null">
				totalFee = #{totalfee,jdbcType=DOUBLE},
			</if>
		</set>
		where oid = #{oid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.animal.model.OrderDetail">
		update order_detail
		set sid = #{sid,jdbcType=INTEGER},
		num = #{num,jdbcType=INTEGER},
		sname = #{sname,jdbcType=VARCHAR},
		price = #{price,jdbcType=DOUBLE},
		img = #{img,jdbcType=VARCHAR},
		totalFee = #{totalfee,jdbcType=DOUBLE}
		where oid = #{oid,jdbcType=VARCHAR}
	</update>
</mapper>