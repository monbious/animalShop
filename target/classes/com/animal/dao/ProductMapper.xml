<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.animal.dao.ProductMapper">
	<select id="selectAllByLike" resultType="com.animal.model.Product">
		select * from product
		where name like #{q}
	</select>
	<select id="search" resultType="com.animal.model.Product">
		select * from product
	</select>
	<insert id="add" parameterType="com.animal.model.Product">
		insert into product(cid,name,price,stock,img)
		values(#{cid},#{name},#{price},#{stock},#{img})<!-- ,jdbcType=VARCHAR可以添加在img里，也可以不添加 -->
	</insert>
	<select id="selectById" parameterType="java.lang.Integer"
		resultType="com.animal.model.Product">
		select * from product where id = #{id}
	</select>
	<select id="selectByCid" parameterType="java.lang.Integer"
		resultType="com.animal.model.Product">
		select * from product where cid = #{cid}
	</select>

	<update id="update" parameterType="com.animal.model.Product">
		update product set
		cid=#{cid},name=#{name},price=#{price},stock=#{stock},img=#{img} where
		id=#{id}
	</update>
	<delete id="delete" parameterType="java.lang.Integer">
		delete from product where id =
		#{id}
	</delete>


	<delete id="deleteMany" parameterType="java.lang.Integer">
		delete from product where id in
		<foreach close=")" collection="idMany" index="index" item="item"
			open="(" separator=",">
			#{item}
		</foreach>
	</delete>

	<resultMap id="BaseResultMap" type="com.animal.model.Product">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="cid" jdbcType="INTEGER" property="cid" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="price" jdbcType="DOUBLE" property="price" />
		<result column="stock" jdbcType="BIGINT" property="stock" />
		<result column="img" jdbcType="VARCHAR" property="img" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, cid, name, price, stock, img
	</sql>
	<select id="selectByExample" parameterType="com.animal.model.ProductExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from product
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from product
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.animal.model.ProductExample">
		delete from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.animal.model.Product">
		insert into product (id, cid, name,
		price, stock, img)
		values (#{id,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{price,jdbcType=DOUBLE}, #{stock,jdbcType=BIGINT}, #{img,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.animal.model.Product">
		insert into product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="cid != null">
				cid,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="stock != null">
				stock,
			</if>
			<if test="img != null">
				img,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="cid != null">
				#{cid,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=DOUBLE},
			</if>
			<if test="stock != null">
				#{stock,jdbcType=BIGINT},
			</if>
			<if test="img != null">
				#{img,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.animal.model.ProductExample"
		resultType="java.lang.Long">
		select count(*) from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update product
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.cid != null">
				cid = #{record.cid,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DOUBLE},
			</if>
			<if test="record.stock != null">
				stock = #{record.stock,jdbcType=BIGINT},
			</if>
			<if test="record.img != null">
				img = #{record.img,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update product
		set id = #{record.id,jdbcType=INTEGER},
		cid = #{record.cid,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=DOUBLE},
		stock = #{record.stock,jdbcType=BIGINT},
		img = #{record.img,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.animal.model.Product">
		update product
		<set>
			<if test="cid != null">
				cid = #{cid,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="stock != null">
				stock = #{stock,jdbcType=BIGINT},
			</if>
			<if test="img != null">
				img = #{img,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.animal.model.Product">
		update product
		set cid = #{cid,jdbcType=INTEGER},
		name = #{name,jdbcType=VARCHAR},
		price = #{price,jdbcType=DOUBLE},
		stock = #{stock,jdbcType=BIGINT},
		img = #{img,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>