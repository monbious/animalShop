<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.animal.dao.UserMapper">
	<insert id="insertUser" parameterType="com.animal.model.User">
		insert into user
		(username, pwd, ques, answer, role) values (#{username}, #{pwd},
		#{ques}, #{answer}, #{role})
	</insert>

	<delete id="deleteUser" parameterType="java.lang.Integer">
		delete from user where id
		= #{id}
	</delete>

	<update id="updateUser" parameterType="com.animal.model.User">
		update user set username =
		#{username}, pwd = #{pwd}, ques = #{ques}, answer = #{answer}, role =
		#{role} where id = #{id}
	</update>

	<select id="findOneUser" parameterType="java.lang.Integer"
		resultType="com.animal.model.User">
		select * from user where id = #{id}
	</select>
	<select id="search" resultType="com.animal.model.User">
		select * from user
	</select>
	<select id="findOne" parameterType="com.animal.model.User"
		resultType="com.animal.model.User">
		select * from user where username = #{username} and pwd =
		#{pwd}
	</select>
	<resultMap id="BaseResultMap" type="com.animal.model.User">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="pwd" jdbcType="VARCHAR" property="pwd" />
		<result column="ques" jdbcType="VARCHAR" property="ques" />
		<result column="answer" jdbcType="VARCHAR" property="answer" />
		<result column="role" jdbcType="INTEGER" property="role" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, username, pwd, ques, answer, role
	</sql>
	<select id="selectByExample" parameterType="com.animal.model.UserExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.animal.model.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.animal.model.User">
		insert into user (id, username, pwd,
		ques, answer, role)
		values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{pwd,jdbcType=VARCHAR},
		#{ques,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.animal.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="pwd != null">
				pwd,
			</if>
			<if test="ques != null">
				ques,
			</if>
			<if test="answer != null">
				answer,
			</if>
			<if test="role != null">
				role,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				#{pwd,jdbcType=VARCHAR},
			</if>
			<if test="ques != null">
				#{ques,jdbcType=VARCHAR},
			</if>
			<if test="answer != null">
				#{answer,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				#{role,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.animal.model.UserExample"
		resultType="java.lang.Long">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.username != null">
				username = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.pwd != null">
				pwd = #{record.pwd,jdbcType=VARCHAR},
			</if>
			<if test="record.ques != null">
				ques = #{record.ques,jdbcType=VARCHAR},
			</if>
			<if test="record.answer != null">
				answer = #{record.answer,jdbcType=VARCHAR},
			</if>
			<if test="record.role != null">
				role = #{record.role,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set id = #{record.id,jdbcType=INTEGER},
		username = #{record.username,jdbcType=VARCHAR},
		pwd = #{record.pwd,jdbcType=VARCHAR},
		ques = #{record.ques,jdbcType=VARCHAR},
		answer = #{record.answer,jdbcType=VARCHAR},
		role = #{record.role,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.animal.model.User">
		update user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				pwd = #{pwd,jdbcType=VARCHAR},
			</if>
			<if test="ques != null">
				ques = #{ques,jdbcType=VARCHAR},
			</if>
			<if test="answer != null">
				answer = #{answer,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				role = #{role,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.animal.model.User">
		update user
		set username = #{username,jdbcType=VARCHAR},
		pwd = #{pwd,jdbcType=VARCHAR},
		ques = #{ques,jdbcType=VARCHAR},
		answer = #{answer,jdbcType=VARCHAR},
		role = #{role,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>